/* 
 * Mentoring API
 *
 * No descripton provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Orders
    /// </summary>
    [DataContract]
    public partial class Orders :  IEquatable<Orders>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Orders" /> class.
        /// </summary>
        /// <param name="OrderId">OrderId.</param>
        /// <param name="CustomerId">CustomerId.</param>
        /// <param name="EmployeeId">EmployeeId.</param>
        /// <param name="OrderDate">OrderDate.</param>
        /// <param name="RequiredDate">RequiredDate.</param>
        /// <param name="ShippedDate">ShippedDate.</param>
        /// <param name="ShipVia">ShipVia.</param>
        /// <param name="Freight">Freight.</param>
        /// <param name="ShipName">ShipName.</param>
        /// <param name="ShipAddress">ShipAddress.</param>
        /// <param name="ShipCity">ShipCity.</param>
        /// <param name="ShipRegion">ShipRegion.</param>
        /// <param name="ShipPostalCode">ShipPostalCode.</param>
        /// <param name="ShipCountry">ShipCountry.</param>
        /// <param name="Customer">Customer.</param>
        /// <param name="Employee">Employee.</param>
        /// <param name="ShipViaNavigation">ShipViaNavigation.</param>
        /// <param name="OrderDetails">OrderDetails.</param>
        public Orders(int? OrderId = null, string CustomerId = null, int? EmployeeId = null, DateTime? OrderDate = null, DateTime? RequiredDate = null, DateTime? ShippedDate = null, int? ShipVia = null, double? Freight = null, string ShipName = null, string ShipAddress = null, string ShipCity = null, string ShipRegion = null, string ShipPostalCode = null, string ShipCountry = null, Customers Customer = null, Employees Employee = null, Shippers ShipViaNavigation = null, List<OrderDetails> OrderDetails = null)
        {
            this.OrderId = OrderId;
            this.CustomerId = CustomerId;
            this.EmployeeId = EmployeeId;
            this.OrderDate = OrderDate;
            this.RequiredDate = RequiredDate;
            this.ShippedDate = ShippedDate;
            this.ShipVia = ShipVia;
            this.Freight = Freight;
            this.ShipName = ShipName;
            this.ShipAddress = ShipAddress;
            this.ShipCity = ShipCity;
            this.ShipRegion = ShipRegion;
            this.ShipPostalCode = ShipPostalCode;
            this.ShipCountry = ShipCountry;
            this.Customer = Customer;
            this.Employee = Employee;
            this.ShipViaNavigation = ShipViaNavigation;
            this.OrderDetails = OrderDetails;
        }
        
        /// <summary>
        /// Gets or Sets OrderId
        /// </summary>
        [DataMember(Name="orderId", EmitDefaultValue=false)]
        public int? OrderId { get; set; }
        /// <summary>
        /// Gets or Sets CustomerId
        /// </summary>
        [DataMember(Name="customerId", EmitDefaultValue=false)]
        public string CustomerId { get; set; }
        /// <summary>
        /// Gets or Sets EmployeeId
        /// </summary>
        [DataMember(Name="employeeId", EmitDefaultValue=false)]
        public int? EmployeeId { get; set; }
        /// <summary>
        /// Gets or Sets OrderDate
        /// </summary>
        [DataMember(Name="orderDate", EmitDefaultValue=false)]
        public DateTime? OrderDate { get; set; }
        /// <summary>
        /// Gets or Sets RequiredDate
        /// </summary>
        [DataMember(Name="requiredDate", EmitDefaultValue=false)]
        public DateTime? RequiredDate { get; set; }
        /// <summary>
        /// Gets or Sets ShippedDate
        /// </summary>
        [DataMember(Name="shippedDate", EmitDefaultValue=false)]
        public DateTime? ShippedDate { get; set; }
        /// <summary>
        /// Gets or Sets ShipVia
        /// </summary>
        [DataMember(Name="shipVia", EmitDefaultValue=false)]
        public int? ShipVia { get; set; }
        /// <summary>
        /// Gets or Sets Freight
        /// </summary>
        [DataMember(Name="freight", EmitDefaultValue=false)]
        public double? Freight { get; set; }
        /// <summary>
        /// Gets or Sets ShipName
        /// </summary>
        [DataMember(Name="shipName", EmitDefaultValue=false)]
        public string ShipName { get; set; }
        /// <summary>
        /// Gets or Sets ShipAddress
        /// </summary>
        [DataMember(Name="shipAddress", EmitDefaultValue=false)]
        public string ShipAddress { get; set; }
        /// <summary>
        /// Gets or Sets ShipCity
        /// </summary>
        [DataMember(Name="shipCity", EmitDefaultValue=false)]
        public string ShipCity { get; set; }
        /// <summary>
        /// Gets or Sets ShipRegion
        /// </summary>
        [DataMember(Name="shipRegion", EmitDefaultValue=false)]
        public string ShipRegion { get; set; }
        /// <summary>
        /// Gets or Sets ShipPostalCode
        /// </summary>
        [DataMember(Name="shipPostalCode", EmitDefaultValue=false)]
        public string ShipPostalCode { get; set; }
        /// <summary>
        /// Gets or Sets ShipCountry
        /// </summary>
        [DataMember(Name="shipCountry", EmitDefaultValue=false)]
        public string ShipCountry { get; set; }
        /// <summary>
        /// Gets or Sets Customer
        /// </summary>
        [DataMember(Name="customer", EmitDefaultValue=false)]
        public Customers Customer { get; set; }
        /// <summary>
        /// Gets or Sets Employee
        /// </summary>
        [DataMember(Name="employee", EmitDefaultValue=false)]
        public Employees Employee { get; set; }
        /// <summary>
        /// Gets or Sets ShipViaNavigation
        /// </summary>
        [DataMember(Name="shipViaNavigation", EmitDefaultValue=false)]
        public Shippers ShipViaNavigation { get; set; }
        /// <summary>
        /// Gets or Sets OrderDetails
        /// </summary>
        [DataMember(Name="orderDetails", EmitDefaultValue=false)]
        public List<OrderDetails> OrderDetails { get; set; }
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Orders {\n");
            sb.Append("  OrderId: ").Append(OrderId).Append("\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  EmployeeId: ").Append(EmployeeId).Append("\n");
            sb.Append("  OrderDate: ").Append(OrderDate).Append("\n");
            sb.Append("  RequiredDate: ").Append(RequiredDate).Append("\n");
            sb.Append("  ShippedDate: ").Append(ShippedDate).Append("\n");
            sb.Append("  ShipVia: ").Append(ShipVia).Append("\n");
            sb.Append("  Freight: ").Append(Freight).Append("\n");
            sb.Append("  ShipName: ").Append(ShipName).Append("\n");
            sb.Append("  ShipAddress: ").Append(ShipAddress).Append("\n");
            sb.Append("  ShipCity: ").Append(ShipCity).Append("\n");
            sb.Append("  ShipRegion: ").Append(ShipRegion).Append("\n");
            sb.Append("  ShipPostalCode: ").Append(ShipPostalCode).Append("\n");
            sb.Append("  ShipCountry: ").Append(ShipCountry).Append("\n");
            sb.Append("  Customer: ").Append(Customer).Append("\n");
            sb.Append("  Employee: ").Append(Employee).Append("\n");
            sb.Append("  ShipViaNavigation: ").Append(ShipViaNavigation).Append("\n");
            sb.Append("  OrderDetails: ").Append(OrderDetails).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            return this.Equals(obj as Orders);
        }

        /// <summary>
        /// Returns true if Orders instances are equal
        /// </summary>
        /// <param name="other">Instance of Orders to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Orders other)
        {
            // credit: http://stackoverflow.com/a/10454552/677735
            if (other == null)
                return false;

            return 
                (
                    this.OrderId == other.OrderId ||
                    this.OrderId != null &&
                    this.OrderId.Equals(other.OrderId)
                ) && 
                (
                    this.CustomerId == other.CustomerId ||
                    this.CustomerId != null &&
                    this.CustomerId.Equals(other.CustomerId)
                ) && 
                (
                    this.EmployeeId == other.EmployeeId ||
                    this.EmployeeId != null &&
                    this.EmployeeId.Equals(other.EmployeeId)
                ) && 
                (
                    this.OrderDate == other.OrderDate ||
                    this.OrderDate != null &&
                    this.OrderDate.Equals(other.OrderDate)
                ) && 
                (
                    this.RequiredDate == other.RequiredDate ||
                    this.RequiredDate != null &&
                    this.RequiredDate.Equals(other.RequiredDate)
                ) && 
                (
                    this.ShippedDate == other.ShippedDate ||
                    this.ShippedDate != null &&
                    this.ShippedDate.Equals(other.ShippedDate)
                ) && 
                (
                    this.ShipVia == other.ShipVia ||
                    this.ShipVia != null &&
                    this.ShipVia.Equals(other.ShipVia)
                ) && 
                (
                    this.Freight == other.Freight ||
                    this.Freight != null &&
                    this.Freight.Equals(other.Freight)
                ) && 
                (
                    this.ShipName == other.ShipName ||
                    this.ShipName != null &&
                    this.ShipName.Equals(other.ShipName)
                ) && 
                (
                    this.ShipAddress == other.ShipAddress ||
                    this.ShipAddress != null &&
                    this.ShipAddress.Equals(other.ShipAddress)
                ) && 
                (
                    this.ShipCity == other.ShipCity ||
                    this.ShipCity != null &&
                    this.ShipCity.Equals(other.ShipCity)
                ) && 
                (
                    this.ShipRegion == other.ShipRegion ||
                    this.ShipRegion != null &&
                    this.ShipRegion.Equals(other.ShipRegion)
                ) && 
                (
                    this.ShipPostalCode == other.ShipPostalCode ||
                    this.ShipPostalCode != null &&
                    this.ShipPostalCode.Equals(other.ShipPostalCode)
                ) && 
                (
                    this.ShipCountry == other.ShipCountry ||
                    this.ShipCountry != null &&
                    this.ShipCountry.Equals(other.ShipCountry)
                ) && 
                (
                    this.Customer == other.Customer ||
                    this.Customer != null &&
                    this.Customer.Equals(other.Customer)
                ) && 
                (
                    this.Employee == other.Employee ||
                    this.Employee != null &&
                    this.Employee.Equals(other.Employee)
                ) && 
                (
                    this.ShipViaNavigation == other.ShipViaNavigation ||
                    this.ShipViaNavigation != null &&
                    this.ShipViaNavigation.Equals(other.ShipViaNavigation)
                ) && 
                (
                    this.OrderDetails == other.OrderDetails ||
                    this.OrderDetails != null &&
                    this.OrderDetails.SequenceEqual(other.OrderDetails)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.OrderId != null)
                    hash = hash * 59 + this.OrderId.GetHashCode();
                if (this.CustomerId != null)
                    hash = hash * 59 + this.CustomerId.GetHashCode();
                if (this.EmployeeId != null)
                    hash = hash * 59 + this.EmployeeId.GetHashCode();
                if (this.OrderDate != null)
                    hash = hash * 59 + this.OrderDate.GetHashCode();
                if (this.RequiredDate != null)
                    hash = hash * 59 + this.RequiredDate.GetHashCode();
                if (this.ShippedDate != null)
                    hash = hash * 59 + this.ShippedDate.GetHashCode();
                if (this.ShipVia != null)
                    hash = hash * 59 + this.ShipVia.GetHashCode();
                if (this.Freight != null)
                    hash = hash * 59 + this.Freight.GetHashCode();
                if (this.ShipName != null)
                    hash = hash * 59 + this.ShipName.GetHashCode();
                if (this.ShipAddress != null)
                    hash = hash * 59 + this.ShipAddress.GetHashCode();
                if (this.ShipCity != null)
                    hash = hash * 59 + this.ShipCity.GetHashCode();
                if (this.ShipRegion != null)
                    hash = hash * 59 + this.ShipRegion.GetHashCode();
                if (this.ShipPostalCode != null)
                    hash = hash * 59 + this.ShipPostalCode.GetHashCode();
                if (this.ShipCountry != null)
                    hash = hash * 59 + this.ShipCountry.GetHashCode();
                if (this.Customer != null)
                    hash = hash * 59 + this.Customer.GetHashCode();
                if (this.Employee != null)
                    hash = hash * 59 + this.Employee.GetHashCode();
                if (this.ShipViaNavigation != null)
                    hash = hash * 59 + this.ShipViaNavigation.GetHashCode();
                if (this.OrderDetails != null)
                    hash = hash * 59 + this.OrderDetails.GetHashCode();
                return hash;
            }
        }
    }

}
